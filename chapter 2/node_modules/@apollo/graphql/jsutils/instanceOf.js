"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A replacement for instanceof which includes an error warning when multi-realm
 * constructors are detected.
 */
// Keep the message around, but only show it once (per instance of graphql-js that encounters mismatched constructors)
var warned = false; // See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production
// See: https://webpack.js.org/guides/production/

var _default = process.env.NODE_ENV === 'production' ? // eslint-disable-next-line no-shadow
function instanceOf(value, constructor) {
  return value instanceof constructor || value != null && value.constructor != null && constructor.name != null && value.constructor.name == constructor.name;
} : // eslint-disable-next-line no-shadow
function instanceOf(value, constructor) {
  if (value instanceof constructor) {
    return true;
  }

  if (value) {
    var valueClass = value.constructor;
    var className = constructor.name;

    if (className && valueClass && valueClass.name === className) {
      if (!warned) {
        console.warn("@apollo/graphql: Using ".concat(className, " \"").concat(value, "\" from another module or realm.\nThis could produce confusing and spurious results, especially if your \"graphql\"/\"@apollo/graphql\" versions are inconsistent.\nYou can use `npm ls graphql` and `npm ls @apollo/graphql` to ensure all versions are consistent."));
        warned = true;
      }

      return true;
    }
  }

  return false;
};

exports.default = _default;
